name: Docker CI/CD

on: 
  push:
    branches:
      - main
  workflow_dispatch:

env:
    IMAGE_NAME: my-app # Docker image adı
    BUILD_DIR: dist # Build dosyalarının bulunduğu dizin
    
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      #Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v5

      #Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      
      #Install dependencies
      - name: Install, build & test
        id: build_step
        run: |
          npm install
          npm run build --if-present
          npm test
          echo "build_path=$PWD/${{ env.BUILD_DIR}}" >> $GITHUB_OUTPUT
    # Step output olarak build klasörünü job içinde kullabilmek için ayarlıyoruz.
    
      #Archive build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ${{ steps.build_step.outputs.build_path }}
          
      # 5️⃣ Login to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      # 7️⃣ Push Docker image
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}